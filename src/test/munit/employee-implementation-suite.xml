<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="post:\emp-create:application\json:emp-sapi-config-404-application\json-FlowTest" description="Verifying functionality of [post:\emp-create:application\json:emp-sapi-config-404-application\json]">
        <munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="5c5d3939-e192-4473-9e55-c324ee9b1f7e" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d3a95a73-8fea-4063-8a91-c72ff197aed5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
        </munit:behavior>
		<munit:execution>
			<set-payload value="#[output application/json --- readUrl('classpath://scaffolder_request/post_emp-create_application_json.json')]" />
			<try doc:name="Try" doc:id="143ecd23-a6e8-4495-b407-dacf1362997c" >
				<flow-ref doc:name="Flow Reference" doc:id="1fefcc83-3e1c-4ced-8f56-a4fed5ecd790" name="post:\emp-create:application\json:emp-sapi-config"/>
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="dc8b735e-201c-4dce-a8b6-eb69ddfcf76d" type="HTTP:NOT_FOUND">
						<logger level="INFO" doc:name="Continue" doc:id="ac315843-d5dc-43a9-bd0d-474e35dfb728" message="Continue...."/>
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload.status]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(readUrl('classpath://scaffolder_response/post_404_emp-create_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\emp-create:application\json:emp-sapi-config-500-application\json-FlowTest" description="Verifying functionality of [post:\emp-create:application\json:emp-sapi-config-500-application\json]">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="680139ab-8e5d-44e4-be1c-9996d00e26e6" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7b0b7584-f422-4ecd-a272-98cee9f351bd" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
        </munit:behavior>
		<munit:execution>
			<set-payload value="#[output appplication/json --- readUrl('classpath://scaffolder_request/post_emp-create_application_json.json')]" />
			<try doc:name="Try" doc:id="c4ab4593-a6e3-4334-b928-48301ba6f02c" >
				<flow-ref doc:name="Flow Reference" doc:id="853dfca2-847b-4282-8761-9179118838da" name="post:\emp-create:application\json:emp-sapi-config"/>
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="c96a09e5-66af-48f8-8b22-931e3bdd6ee3" type="ANY" >
						<logger level="INFO" doc:name="Continue" doc:id="f4ccfc45-955a-475c-acf1-f8e1dd22adfd" message="Continue...." />
						<set-variable value="#[500]" doc:name="Set Variable" doc:id="75ed390b-e287-4626-b1a8-fd6ffc5a999d" variableName="httpStatus"/>
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(readUrl('classpath://scaffolder_response/post_500_emp-create_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
	<munit:config name="employee-implementation-suite.xml" />
	<munit:test name="post:\emp-create:application\json:emp-sapi-config-success-test" doc:id="b52b9346-96dc-4c65-b0e1-27ef65c09b60">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Insert to DB" doc:id="810cb7b9-9ecf-442e-aef2-e52187e74b32" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7b0b7584-f422-4ecd-a272-98cee9f351bd" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://postempcreateapplicationjsonempsapiconfigsuccesstest\mock_payload.dwl')]" mediaType="application/java " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postempcreateapplicationjsonempsapiconfigsuccesstest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy Request" doc:id="40b1c971-165a-48dc-a257-bc55cb9a2e4e" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d3a95a73-8fea-4063-8a91-c72ff197aed5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="847afd5c-a3e1-41b8-bb1a-5d2d1eeff463" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import postempcreateapplicationjsonempsapiconfigsuccesstest::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="a965596a-8d57-4c35-b148-57b636bdee05" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import postempcreateapplicationjsonempsapiconfigsuccesstest::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="fd9bf6ef-d978-4435-a02c-c08419a76726">
				<munit:payload value="#[output application/json  --- readUrl('classpath://postempcreateapplicationjsonempsapiconfigsuccesstest\set-event_payload.dwl')]" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://postempcreateapplicationjsonempsapiconfigsuccesstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postempcreateapplicationjsonempsapiconfigsuccesstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\emp-create:application\json:emp-sapi-config" doc:id="96831200-1558-4482-88be-ce7dbca2ef07" name="post:\emp-create:application\json:emp-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="e4879735-535e-477f-a9c7-ca12bb67a4ad" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postempcreateapplicationjsonempsapiconfigsuccesstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Request" doc:id="c3fdcdb5-3e6a-475e-980b-da58434f6b75" processor="http:request" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d3a95a73-8fea-4063-8a91-c72ff197aed5" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
